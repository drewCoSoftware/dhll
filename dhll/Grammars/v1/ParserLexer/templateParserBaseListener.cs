//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./v1/templateParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace dhll.v1 {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ItemplateParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class templateParserBaseListener : ItemplateParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="templateParser.templates"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplates([NotNull] templateParser.TemplatesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="templateParser.templates"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplates([NotNull] templateParser.TemplatesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="templateParser.htmlElements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHtmlElements([NotNull] templateParser.HtmlElementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="templateParser.htmlElements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHtmlElements([NotNull] templateParser.HtmlElementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="templateParser.htmlMisc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHtmlMisc([NotNull] templateParser.HtmlMiscContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="templateParser.htmlMisc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHtmlMisc([NotNull] templateParser.HtmlMiscContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="templateParser.entityName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntityName([NotNull] templateParser.EntityNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="templateParser.entityName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntityName([NotNull] templateParser.EntityNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="templateParser.htmlElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHtmlElement([NotNull] templateParser.HtmlElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="templateParser.htmlElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHtmlElement([NotNull] templateParser.HtmlElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="templateParser.htmlContent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHtmlContent([NotNull] templateParser.HtmlContentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="templateParser.htmlContent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHtmlContent([NotNull] templateParser.HtmlContentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="templateParser.htmlAttribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHtmlAttribute([NotNull] templateParser.HtmlAttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="templateParser.htmlAttribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHtmlAttribute([NotNull] templateParser.HtmlAttributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="templateParser.htmlChardata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHtmlChardata([NotNull] templateParser.HtmlChardataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="templateParser.htmlChardata"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHtmlChardata([NotNull] templateParser.HtmlChardataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="templateParser.htmlComment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHtmlComment([NotNull] templateParser.HtmlCommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="templateParser.htmlComment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHtmlComment([NotNull] templateParser.HtmlCommentContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace dhll.v1
