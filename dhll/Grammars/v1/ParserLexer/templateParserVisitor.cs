//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./v1/templateParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace dhll.v1 {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="templateParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ItemplateParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="templateParser.templates"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplates([NotNull] templateParser.TemplatesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="templateParser.htmlElements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHtmlElements([NotNull] templateParser.HtmlElementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="templateParser.htmlMisc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHtmlMisc([NotNull] templateParser.HtmlMiscContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="templateParser.entityName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEntityName([NotNull] templateParser.EntityNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="templateParser.htmlElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHtmlElement([NotNull] templateParser.HtmlElementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="templateParser.htmlContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHtmlContent([NotNull] templateParser.HtmlContentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="templateParser.htmlAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHtmlAttribute([NotNull] templateParser.HtmlAttributeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="templateParser.htmlChardata"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHtmlChardata([NotNull] templateParser.HtmlChardataContext context);
}
} // namespace dhll.v1
